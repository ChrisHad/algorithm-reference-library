---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: notebook
  labels:
    k8s-app: notebook
spec:
  type: NodePort
  ports:
  - name: jupyter
    port: 8888
    targetPort: jupyter
    protocol: TCP
  selector:
    k8s-app: notebook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notebook
  namespace: default
spec:
  selector:
    matchLabels:
      k8s-app: notebook
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: notebook
    spec:
      imagePullSecrets:
        - name: arlregcred
      containers:
      - name: notebook
        image: ${DOCKER_IMAGE}
        imagePullPolicy: IfNotPresent
        env:
          - name: ARL_DASK_SCHEDULER
            value: "dask-scheduler.default.svc.cluster.local:8786"
          - name: JUPYTER_PASSWORD
            value: "${JUPYTER_PASSWORD}"
          - name: NOTEBOOK_PORT
            value: "8888"
        volumeMounts:
        - mountPath: /arl/data
          name: arldata
          readOnly: false
        ports:
        - name: jupyter
          containerPort: 8888
        readinessProbe:
          httpGet:
            path: /api
            port: 8888
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 20
          failureThreshold: 3
      volumes:
      # - hostPath:
      #     path: ${WORKER_ARL_DATA}
      #     type: DirectoryOrCreate
      #   name: arldata
      - name: arldata
        nfs:
          server: ${NFS_SERVER}
          path: "/data"
