---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notebook
  namespace: default
  labels:
    app: notebook-{{ template "arl-cluster.name" . }}
    chart: {{ template "arl-cluster.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: notebook-{{ template "arl-cluster.name" . }}
      release: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: notebook-{{ template "arl-cluster.name" . }}
        app: notebook-{{ template "arl-cluster.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: notebook-{{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: ARL_DASK_SCHEDULER
            value: dask-scheduler-{{ template "arl-cluster.fullname" . }}.default.svc.cluster.local:8786
          - name: JUPYTER_PASSWORD
            value: "{{ .Values.jupyter.password }}"
          - name: NOTEBOOK_PORT
            value: "8888"
        volumeMounts:
        - mountPath: /arl/data
          name: arldata
          readOnly: false
        ports:
        - name: jupyter
          containerPort: 8888
        readinessProbe:
          httpGet:
            path: /api
            port: 8888
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 20
          failureThreshold: 3
      volumes:
      # - hostPath:
      #     path: ${WORKER_ARL_DATA}
      #     type: DirectoryOrCreate
      #   name: arldata
      - name: arldata
        nfs:
          server: "{{ .Values.nfs.server }}"
          path: "/data"
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
